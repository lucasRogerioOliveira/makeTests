package classes.car;
import org.junit.Test;
import org.junit.Before;
import org.junit.Assert;
import classes.car.Car;
import org.joda.time.DateTimeZone;
import java.util.TimeZone;
import java.util.Date;
import org.joda.time.DateTime;
import classes.gear.Gear;
import classes.foo.Foo;
import java.util.Set;
import classes.genericclass.GenericClass;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Calendar;
import java.util.Map;
import classes.bar.Bar;
import java.util.LinkedList;


public class CarTests {


    private Car car = new Car();

    @Before
    public void beforeTest(){
        //sorry, but a can't get the Locale =(
        Calendar calendar1 = Calendar.getInstance(TimeZone.getTimeZone("GMT"));
        calendar1.setTimeInMillis(458755000L);        car.setCalendar(calendar1);

        classes.car.Car car2 = new classes.car.Car();
        car2.setColor(enuns.Color.Red);
        Date date3 = new Date(10L);
        car2.setDate(date3);
        car2.setFlax(true);

        classes.genericclass.GenericClass<Object> genericclass4 = new classes.genericclass.GenericClass<Object>();
        car2.setGenericClass(genericclass4);


        classes.genericclass.GenericClass<Object> genericclass25 = new classes.genericclass.GenericClass<Object>();
        genericclass25.setName("test");
        genericclass25.setPerformance(2.1);
        car2.setGenericClass2(genericclass25);

        car2.setName("Trem que pula");
        car2.setNumberWeels(999);
        car2.setPrice(33.44);
        classes.car.Car.setSomething("something nice ;)");
        classes.car.Car.setStaticCar(car);

        car.setCar(car2);

        car.setColor(enuns.Color.Blue);
        Date date7 = new Date(12542200L);
        car.setDate(date7);
        car.setFlax(false);
        Map<classes.foo.Foo,classes.bar.Bar> map8 = new java.util.HashMap<classes.foo.Foo,classes.bar.Bar>();
        classes.foo.Foo foo9 = new classes.foo.Foo();
        foo9.setTicarica("ticaricatica");
        classes.bar.Bar bar10 = new classes.bar.Bar();
        Date date11 = new Date(5555245L);
        bar10.setDate(date11);
        bar10.setDescription("zé venancio");
        map8.put(foo9,bar10);
        classes.foo.Foo foo12 = new classes.foo.Foo();
        classes.bar.Bar bar13 = new classes.bar.Bar();
        map8.put(foo12,bar13);
        car.setFooBar(map8);
        Set<classes.foo.Foo>fooset14 = new java.util.HashSet<classes.foo.Foo>();
        classes.foo.Foo foo15 = new classes.foo.Foo();
        DateTime dateTime16 = new DateTime(222L, DateTimeZone.forID("America/Sao_Paulo"));
        foo15.setDateTime(dateTime16);
        foo15.setTicarica("curupaaaaco! kk");
        fooset14.add(foo15);
        classes.foo.Foo foo17 = new classes.foo.Foo();
        fooset14.add(foo17);
        car.setFooSet(fooset14);



        classes.gear.Gear gear18 = new classes.gear.Gear();
        gear18.setNumberOfTeeth(10);
        gear18.setSize(1.1);
        gear18.setSizeFit(15.261);
        car.setGear(gear18);

        List<classes.gear.Gear>gears19 = new java.util.LinkedList<classes.gear.Gear>();
        gears19.add(gear18);
        classes.gear.Gear gear21 = new classes.gear.Gear();
        gears19.add(gear21);
        car.setGears(gears19);


        car.setName("Carro");
        car.setNumberWeels(4);
        car.setPrice(22.11);
        List<java.lang.Object>whatever22 = new java.util.ArrayList<java.lang.Object>();
        whatever22.add("abacate");
        whatever22.add(42);
        classes.gear.Gear gear25 = new classes.gear.Gear();
        whatever22.add(gear25);
        car.setWhatever(whatever22);


    }

    @Test
    public void getCalendarTest(){
        java.util.Calendar actual = car.getCalendar();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getCarTest(){
        classes.car.Car actual = car.getCar();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getColorTest(){
        enuns.Color actual = car.getColor();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getDateTest(){
        java.util.Date actual = car.getDate();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getFlaxTest(){
        java.lang.Boolean actual = car.getFlax();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getFooBarTest(){
        java.util.Map actual = car.getFooBar();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getFooSetTest(){
        java.util.Set actual = car.getFooSet();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getGearTest(){
        classes.gear.Gear actual = car.getGear();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getGearsTest(){
        java.util.List actual = car.getGears();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getGenericClassTest(){
        classes.genericclass.GenericClass actual = car.getGenericClass();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getGenericClass2Test(){
        classes.genericclass.GenericClass actual = car.getGenericClass2();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getNameTest(){
        java.lang.String actual = car.getName();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getNumberWeelsTest(){
        java.lang.Integer actual = car.getNumberWeels();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getPriceTest(){
        java.lang.Double actual = car.getPrice();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getQueueTest(){
        java.util.Queue actual = car.getQueue();
        Assert.fail("make your asserts here :)");
    }

    @Test
    public void getSomethingTest(){
    }

    @Test
    public void getStaticCarTest(){
    }

    @Test
    public void getWhateverTest(){
        java.util.List actual = car.getWhatever();
        Assert.fail("make your asserts here :)");
    }

}
